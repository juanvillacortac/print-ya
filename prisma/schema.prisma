// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("VITE_DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id            String   @id @unique @default(cuid())
  email         String   @unique
  password      String?
  stores        Store[]  @relation(name: "users_store")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  storesUpdated Store[]  @relation("store_updatedBy")
}

model Store {
  id              String   @id @default(cuid())
  user            User     @relation("users_store", fields: [userId], references: [id])
  userId          String
  name            String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  updatedBy       User?    @relation("store_updatedBy", fields: [updatedByUserId], references: [id])
  updatedByUserId String?

  slug         String  @unique
  customDomain String? @unique

  logo       String?
  favicon    String?
  categories StoreCategory[]
  products   Product[]
}

model StoreCategory {
  id       String    @id @default(cuid())
  slug     String
  store    Store     @relation(fields: [storeId], references: [id])
  storeId  String
  name     String
  products Product[]
}

enum ProductType {
  template
  generic
}

model Product {
  id   String @id @default(cuid())
  name String
  slug String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store   Store?  @relation(fields: [storeId], references: [id])
  storeId String?

  type ProductType @default(template)

  public Boolean

  description String?

  minQuantity Int?
  modifiers   ProductModifier[]

  price Float

  meta Json?

  images        ProductImage[]
  template      Json?
  templateDraft Json?

  storeCategory   StoreCategory? @relation(fields: [storeCategoryId], references: [id], onDelete: Cascade)
  storeCategoryId String?
}

model ProductImage {
  id  String  @id @default(cuid())
  url String?

  product   Product? @relation(fields: [productId], references: [id])
  productId String?
}

model ProductModifier {
  id               String                @id @default(cuid())
  name             String
  type             String                @default("select")
  active           Boolean               @default(true)
  product          Product?              @relation(fields: [productId], references: [id])
  defaultValue     String?
  templateAccessor String?
  productId        String?
  items            ProductModifierItem[]
}

model ProductModifierItem {
  id         String  @id @default(cuid())
  name       String
  cost       Float   @default(0)
  percentage Boolean @default(false)
  active     Boolean @default(true)

  meta Json?

  productModifier   ProductModifier? @relation(fields: [productModifierId], references: [id])
  productModifierId String?
}
